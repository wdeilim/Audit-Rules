#Place the higher risk commands at the top of the file -  Sort from High risk to Low risk
[Node.js Command Injection 1]
Title: Node.js Potential Command Injection
Regex: (child_process\.exec\()
Message: A reference to a potential Command Injection child_process.exec()
Action: Be careful about the parameters being passed to the command line.  In general, execFile / spawn are more secure than exec in Node.js
Explanation: Command Injection occurs when an applicationd does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component
CWE: CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection')
References: https://cwe.mitre.org/data/definitions/77.html,https://cwe.mitre.org/data/definitions/78.html,https://www.owasp.org/index.php/Injection_Prevention_Cheat_Sheet,https://www.owasp.org/index.php/Reviewing_Code_for_OS_Injection,https://www.owasp.org/index.php/Command_Injection,https://portswigger.net/knowledgebase/issues/details/00100100_oscommandinjection
Confidence: Medium
RiskLevel: 2
[Node.js Command Injection 2]
Title: Node.js Potential Command Injection
Regex: (spawn\()
Message: A reference to a potential Command Injection spawn()
Action: Be careful about the parameters being passed to the command line.  In general, execFile / spawn are more secure than exec in Node.js
Explanation: Command Injection occurs when an applicationd does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component
CWE: CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection')
References: https://cwe.mitre.org/data/definitions/77.html,https://cwe.mitre.org/data/definitions/78.html,https://www.owasp.org/index.php/Injection_Prevention_Cheat_Sheet,https://www.owasp.org/index.php/Reviewing_Code_for_OS_Injection,https://www.owasp.org/index.php/Command_Injection,https://portswigger.net/knowledgebase/issues/details/00100100_oscommandinjection
Confidence: Low
RiskLevel: 1
[Node.js Command Injection 3]
Title: Node.js Potential Command Injection
Regex: (child_process\.execFile\()
Message: A reference to a potential Command Injection spawn()
Action: Be careful about the parameters being passed to the command line.  In general, execFile / spawn are more secure than exec in Node.js
Explanation: Command Injection occurs when an applicationd does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component
CWE: CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection')
References: https://cwe.mitre.org/data/definitions/77.html,https://cwe.mitre.org/data/definitions/78.html,https://www.owasp.org/index.php/Injection_Prevention_Cheat_Sheet,https://www.owasp.org/index.php/Reviewing_Code_for_OS_Injection,https://www.owasp.org/index.php/Command_Injection,https://portswigger.net/knowledgebase/issues/details/00100100_oscommandinjection
Confidence: Low
RiskLevel: 1
